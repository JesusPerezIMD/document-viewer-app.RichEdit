@{
    ViewData["Title"] = "Home Page";
}

<link href="~/node_modules/devextreme/dist/css/dx.light.css" rel="stylesheet" />
<link href="~/node_modules/devexpress-richedit/dist/dx.richedit.css" rel="stylesheet" />
<script src="~/node_modules/jszip/dist/jszip.min.js"></script>
<script src="~/node_modules/devextreme/dist/js/dx.all.js"></script>
@* If you localize the control, you should register localization resources before control script registration.*@
@*<script src="~/node_modules/devexpress-richedit/localization/dx-rich.de.js"></script>*@
@* If you export a document to PDF on the client side (the exportToPdf method) or enable client PDF printing mode,
you should register the pdfkit library before control script registration.*@
@*<script src="~/node_modules/devexpress-richedit/dist/pdfkit.js"></script>*@
<script src="~/node_modules/devexpress-richedit/dist/dx.richedit.js"></script>

@section Scripts {
    <script>
        const nombreArchivo = "Documento.docx";
        const urlDescarga = `https://bconnectstoragetest.blob.core.windows.net/temp/${nombreArchivo}`;
        window.location.href = `/Home/DescargarArchivo?nombreArchivo=${nombreArchivo}&urlDescarga=${urlDescarga}`;
    </script>
}

@(Html.DevExpress().RichEdit("richEdit")
    .Width("100%")
    .Height(800)
    .AutoCorrect(a => a
        .CorrectTwoInitialCapitals(true)
        .ReplaceTextAsYouType(true)
        .ReplaceInfoCollectionSettings(s =>
        {
            s.CaseSensitive(true);
            s.ReplaceInfoCollection(c =>
            {
                c.Add().What("(c)").With("©");
                c.Add().What("wnwd").With("well-nourished, well-developed");
            });
        })
    )
    .Bookmarks(b => b
        .Visibility(DevExpress.AspNetCore.RichEdit.Visibility.Visible)
        .Color(System.Drawing.Color.Blue)
    )
    .Ribbon(ribbon => ribbon
        .ActiveTabIndex(0)
    )
    .Open("ArchivosTemporales/Documento.docx")
)